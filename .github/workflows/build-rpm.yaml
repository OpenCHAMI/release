name: Build, Sign, and Publish RPM

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      release_tag:
        description: 'Release tag to publish (e.g., v1.2.3). Leave empty to use the tag from a push.'
        required: false
        default: ''

permissions:
  contents: write

jobs:
  build-rpm:
    runs-on: ubuntu-latest
    container:
      image: fedora:latest
    env:
      # Set the RELEASE_TAG environment variable from workflow_dispatch input (it will be empty on non-dispatch events)
      RELEASE_TAG: ${{ github.event.inputs.release_tag }}

    steps:
      - name: Install dependencies
        run: |
          dnf install -y rpm-build rpm-sign rpmlint gcc make redhat-rpm-config \
                         gpg gpg2 gnupg2 expect rpmdevtools createrepo

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Import GPG key
        run: |
          echo "$GPG_PRIVATE_KEY" | base64 --decode | gpg --import --batch --yes
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}

      - name: Get version
        id: get_version
        run: |
          # If a release_tag input was provided via workflow_dispatch, use it.
          if [ -n "$RELEASE_TAG" ]; then
            VERSION=${RELEASE_TAG#v}
          elif [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
          else
            VERSION=0.0.0
          fi
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          echo "Version is ${VERSION}"
          
      - name: Setup RPM build environment
        run: |
          rpmdev-setuptree
          cp ./*.spec ~/rpmbuild/SPECS/
          cp -r ./* ~/rpmbuild/SOURCES/ || true

      - name: Create source tarball
        run: |
          mkdir -p ~/rpmbuild/SOURCES/openchami-${{ env.VERSION }}
          cp -r ./* ~/rpmbuild/SOURCES/openchami-${{ env.VERSION }}/
          tar -czf ~/rpmbuild/SOURCES/openchami-${{ env.VERSION }}.tar.gz -C ~/rpmbuild/SOURCES openchami-${{ env.VERSION }} --transform "s/openchami-${{ env.VERSION }}-${{ env.COMMIT_SHA }}/openchami-${{ env.VERSION }}/"

      - name: Sign source tarball
        if: env.VERSION != '0.0.0'
        run: |
          echo "$GPG_PASSPHRASE" | gpg --batch --yes --passphrase-fd 0 --pinentry-mode loopback --armor --detach-sign --output ~/rpmbuild/SOURCES/openchami-${{ env.VERSION }}.tar.gz.asc ~/rpmbuild/SOURCES/openchami-${{ env.VERSION }}.tar.gz
        env:
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

      - name: Build RPM package
        run: |
          rpmbuild -ba ~/rpmbuild/SPECS/*.spec --define "version ${{ env.VERSION }}" --define "release 1"

      - name: Sign RPM packages
        if: env.VERSION != '0.0.0'
        run: |
          for rpm in $(find ~/rpmbuild/RPMS/ -type f -name "*.rpm"); do
            echo "$GPG_PASSPHRASE" | gpg --batch --yes --passphrase-fd 0 --pinentry-mode loopback --detach-sign --armor $rpm
            rpm --define "_gpg_name admin@openchami.org" --addsign $rpm
          done
        env:
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

      - name: Upload RPM as artifact
        uses: actions/upload-artifact@v4
        with:
          name: openchami-${{ env.VERSION }}
          path: ~/rpmbuild/RPMS/noarch/*.rpm

      - name: Create GitHub Release
        if: env.VERSION != '0.0.0'
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # Prefix the version with "v" so that the release tag is like "v1.2.3"
          tag_name: v${{ env.VERSION }}
          release_name: v${{ env.VERSION }}
          draft: false
          prerelease: false

      - name: Find RPM file
        if: env.VERSION != '0.0.0'
        id: find_rpm
        run: |
          rpm_file=$(ls ~/rpmbuild/RPMS/noarch/*.rpm)
          echo "rpm_file=${rpm_file}" >> $GITHUB_ENV
          echo "::set-output name=path::${rpm_file}"

      - name: Upload RPM to GitHub Release
        if: env.VERSION != '0.0.0'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.find_rpm.outputs.path }}
          asset_name: openchami-${{ env.VERSION }}.rpm
          asset_content_type: application/x-rpm
